{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VIGGU\\\\codes\\\\REACT JS\\\\NLPTranslator\\\\src\\\\components\\\\Livetrans.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Lt.css\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Livetrans() {\n  _s();\n  const styles = {\n    backgroundColor: \"#2196F3\",\n    color: \"white\",\n    borderRadius: \"6px\",\n    padding: \"16px 32px\",\n    border: \"none\",\n    letterSpacing: \"1px\",\n    margin: \"auto\",\n    display: \"flex\",\n    position: \"relative\",\n    marginTop: \"-80px\",\n    cursor: \"pointer\"\n  };\n  const commands = [{\n    command: \"reset\",\n    callback: _ref => {\n      let {\n        resetTranscript\n      } = _ref;\n      return resetTranscript();\n    }\n  }, {\n    command: \"open *\",\n    callback: site => {\n      window.open(\"http://\" + site);\n    }\n  }];\n  const [buttonText, setButtonText] = useState('Start Listening');\n  const [buttonText1, setButtonText1] = useState('Stop Listening');\n  const startListening = () => {\n    console.log(\"listening...\");\n    setButtonText('Started');\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"en-IN\"\n    });\n  };\n  const stopListening = () => {\n    SpeechRecognition.startListening();\n    setButtonText('Start Li');\n  };\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition({\n    commands\n  });\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Speech to Text Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-style\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startListening,\n            style: styles,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mx-3\",\n            style: styles,\n            onClick: stopListening,\n            children: buttonText1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mx-3\",\n            style: styles,\n            onClick: resetTranscript,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Livetrans, \"imAsmVyGOqC5PGh5FazDqK3t88s=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Livetrans;\nvar _c;\n$RefreshReg$(_c, \"Livetrans\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","Livetrans","_s","styles","backgroundColor","color","borderRadius","padding","border","letterSpacing","margin","display","position","marginTop","cursor","commands","command","callback","_ref","resetTranscript","site","window","open","buttonText","setButtonText","buttonText1","setButtonText1","startListening","console","log","continuous","language","stopListening","transcript","browserSupportsSpeechRecognition","children","style","width","height","justifyContent","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/VIGGU/codes/REACT JS/NLPTranslator/src/components/Livetrans.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../Lt.css\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nexport default function Livetrans() {\r\n  const styles = {\r\n    backgroundColor: \"#2196F3\",\r\n    color: \"white\",\r\n    borderRadius: \"6px\",\r\n    padding: \"16px 32px\",\r\n    border: \"none\",\r\n    letterSpacing: \"1px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    marginTop: \"-80px\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const commands = [\r\n    {\r\n      command: \"reset\",\r\n      callback: ({ resetTranscript }) => resetTranscript(),\r\n    },\r\n    {\r\n      command: \"open *\",\r\n      callback: (site) => {\r\n        window.open(\"http://\" + site);\r\n      },\r\n    },\r\n  ];\r\n  const [buttonText, setButtonText] = useState('Start Listening');\r\n  const [buttonText1, setButtonText1] = useState('Stop Listening');\r\n\r\n  const startListening = () => {\r\n    console.log(\"listening...\");\r\n    setButtonText('Started');\r\n    SpeechRecognition.startListening({ continuous: true, language: \"en-IN\" });\r\n  };\r\n  const stopListening=()=>{\r\n    SpeechRecognition.startListening();\r\n    setButtonText('Start Li')\r\n  }\r\n  const { transcript, resetTranscript, browserSupportsSpeechRecognition } =\r\n    useSpeechRecognition({ commands });\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"heading\">\r\n          <h2>Speech to Text Converter</h2>\r\n          <br />\r\n\r\n          <div className=\"main-content\">{transcript}</div>\r\n\r\n          <div className=\"btn-style\">\r\n            <button onClick={startListening} style={styles}>\r\n              {buttonText}\r\n            </button>\r\n            <button\r\n              className=\"mx-3\"\r\n              style={styles}\r\n              onClick={stopListening}\r\n            >\r\n              {buttonText1}\r\n            </button>\r\n            <button className=\"mx-3\" style={styles} onClick={resetTranscript}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,MAAM,GAAG;IACbC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,OAAO;IACdC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,MAAM;IACdC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,OAAO;IAClBC,MAAM,EAAE;EACV,CAAC;EACD,MAAMC,QAAQ,GAAG,CACf;IACEC,OAAO,EAAE,OAAO;IAChBC,QAAQ,EAAEC,IAAA;MAAA,IAAC;QAAEC;MAAgB,CAAC,GAAAD,IAAA;MAAA,OAAKC,eAAe,EAAE;IAAA;EACtD,CAAC,EACD;IACEH,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAGG,IAAI,IAAK;MAClBC,MAAM,CAACC,IAAI,CAAC,SAAS,GAAGF,IAAI,CAAC;IAC/B;EACF,CAAC,CACF;EACD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,iBAAiB,CAAC;EAC/D,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,gBAAgB,CAAC;EAEhE,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BL,aAAa,CAAC,SAAS,CAAC;IACxB7B,iBAAiB,CAACgC,cAAc,CAAC;MAAEG,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC;EAC3E,CAAC;EACD,MAAMC,aAAa,GAACA,CAAA,KAAI;IACtBrC,iBAAiB,CAACgC,cAAc,EAAE;IAClCH,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EACD,MAAM;IAAES,UAAU;IAAEd,eAAe;IAAEe;EAAiC,CAAC,GACrEtC,oBAAoB,CAAC;IAAEmB;EAAS,CAAC,CAAC;EAEpC,IAAI,CAACmB,gCAAgC,EAAE;IACrC,OAAO,IAAI;EACb;EAEA,oBACEpC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACErC,OAAA;MACEsC,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACd3B,OAAO,EAAE,MAAM;QACf4B,cAAc,EAAE;MAClB,CAAE;MAAAJ,QAAA,eAEFrC,OAAA;QAAK0C,SAAS,EAAC,SAAS;QAAAL,QAAA,gBACtBrC,OAAA;UAAAqC,QAAA,EAAI;QAAwB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjC9C,OAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAEN9C,OAAA;UAAK0C,SAAS,EAAC,cAAc;UAAAL,QAAA,EAAEF;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAEhD9C,OAAA;UAAK0C,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACxBrC,OAAA;YAAQ+C,OAAO,EAAElB,cAAe;YAACS,KAAK,EAAEjC,MAAO;YAAAgC,QAAA,EAC5CZ;UAAU;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ,eACT9C,OAAA;YACE0C,SAAS,EAAC,MAAM;YAChBJ,KAAK,EAAEjC,MAAO;YACd0C,OAAO,EAAEb,aAAc;YAAAG,QAAA,EAEtBV;UAAW;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACL,eACT9C,OAAA;YAAQ0C,SAAS,EAAC,MAAM;YAACJ,KAAK,EAAEjC,MAAO;YAAC0C,OAAO,EAAE1B,eAAgB;YAAAgB,QAAA,EAAC;UAElE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP;AAAC1C,EAAA,CAhFuBD,SAAS;EAAA,QAuC7BL,oBAAoB;AAAA;AAAAkD,EAAA,GAvCA7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
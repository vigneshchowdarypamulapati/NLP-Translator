{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VIGGU\\\\codes\\\\REACT JS\\\\NLPTranslator\\\\src\\\\components\\\\Livetrans.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Lt.css\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Livetrans() {\n  _s();\n  // const styles = {\n  //   backgroundColor: \"#2196F3\",\n  //   color: \"white\",\n  //   borderRadius: \"6px\",\n  //   padding: \"16px 32px\",\n  //   border: \"none\",\n  //   letterSpacing: \"1px\",\n  //   margin: \"auto\",\n  //   display: \"flex\",\n  //   position: \"relative\",\n  //   marginTop: \"-80px\",\n  //   cursor: \"pointer\",\n  // };\n  const commands = [{\n    command: \"reset\",\n    callback: _ref => {\n      let {\n        resetTranscript\n      } = _ref;\n      return resetTranscript();\n    }\n  }, {\n    command: \"open *\",\n    callback: site => {\n      window.open(\"http://\" + site);\n    }\n  }];\n  const [buttonText, setButtonText] = useState('Start Listening');\n  const [buttonText1, setButtonText1] = useState('Stop Listening');\n  const startListening = () => {\n    console.log(\"listening...\");\n    setButtonText('Started!!!');\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"en-IN\"\n    });\n  };\n  const stopListening = () => {\n    SpeechRecognition.stopListening();\n    setButtonText('Start Listening');\n  };\n  const reset = () => {\n    resetTranscript();\n    SpeechRecognition.stopListening();\n    setButtonText('Start Listening');\n    setButtonText1('Stop Listening');\n  };\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition({\n    commands\n  });\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Speech to Text Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-style\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startListening,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mx-3\",\n            onClick: stopListening,\n            children: buttonText1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mx-3\",\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Livetrans, \"imAsmVyGOqC5PGh5FazDqK3t88s=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Livetrans;\nvar _c;\n$RefreshReg$(_c, \"Livetrans\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","Livetrans","_s","commands","command","callback","_ref","resetTranscript","site","window","open","buttonText","setButtonText","buttonText1","setButtonText1","startListening","console","log","continuous","language","stopListening","reset","transcript","browserSupportsSpeechRecognition","children","style","width","height","display","justifyContent","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/VIGGU/codes/REACT JS/NLPTranslator/src/components/Livetrans.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../Lt.css\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nexport default function Livetrans() {\r\n  // const styles = {\r\n  //   backgroundColor: \"#2196F3\",\r\n  //   color: \"white\",\r\n  //   borderRadius: \"6px\",\r\n  //   padding: \"16px 32px\",\r\n  //   border: \"none\",\r\n  //   letterSpacing: \"1px\",\r\n  //   margin: \"auto\",\r\n  //   display: \"flex\",\r\n  //   position: \"relative\",\r\n  //   marginTop: \"-80px\",\r\n  //   cursor: \"pointer\",\r\n  // };\r\n  const commands = [\r\n    {\r\n      command: \"reset\",\r\n      callback: ({ resetTranscript }) => resetTranscript(),\r\n    },\r\n    {\r\n      command: \"open *\",\r\n      callback: (site) => {\r\n        window.open(\"http://\" + site);\r\n      },\r\n    },\r\n  ];\r\n  const [buttonText, setButtonText] = useState('Start Listening');\r\n  const [buttonText1, setButtonText1] = useState('Stop Listening');\r\n\r\n  const startListening = () => {\r\n    console.log(\"listening...\");\r\n    setButtonText('Started!!!');\r\n    SpeechRecognition.startListening({ continuous: true, language: \"en-IN\" });\r\n  };\r\n  const stopListening=()=>{\r\n    SpeechRecognition.stopListening();\r\n    setButtonText('Start Listening');\r\n  }\r\n  const reset=()=>{\r\n    resetTranscript();\r\n    SpeechRecognition.stopListening();\r\n    setButtonText('Start Listening');\r\n    setButtonText1('Stop Listening');\r\n  }\r\n  const { transcript, resetTranscript, browserSupportsSpeechRecognition } =\r\n    useSpeechRecognition({ commands });\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"heading\">\r\n          <h2>Speech to Text Converter</h2>\r\n          <br />\r\n\r\n          <div className=\"main-content\">{transcript}</div>\r\n\r\n          <div className=\"btn-style\">\r\n            <button onClick={startListening} >\r\n              {buttonText}\r\n            </button>\r\n            <button\r\n              className=\"mx-3\"\r\n              onClick={stopListening}\r\n            >\r\n              {buttonText1}\r\n            </button>\r\n            <button className=\"mx-3\"  onClick={reset}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,QAAQ,GAAG,CACf;IACEC,OAAO,EAAE,OAAO;IAChBC,QAAQ,EAAEC,IAAA;MAAA,IAAC;QAAEC;MAAgB,CAAC,GAAAD,IAAA;MAAA,OAAKC,eAAe,EAAE;IAAA;EACtD,CAAC,EACD;IACEH,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAGG,IAAI,IAAK;MAClBC,MAAM,CAACC,IAAI,CAAC,SAAS,GAAGF,IAAI,CAAC;IAC/B;EACF,CAAC,CACF;EACD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,iBAAiB,CAAC;EAC/D,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,gBAAgB,CAAC;EAEhE,MAAMqB,cAAc,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BL,aAAa,CAAC,YAAY,CAAC;IAC3BjB,iBAAiB,CAACoB,cAAc,CAAC;MAAEG,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC;EAC3E,CAAC;EACD,MAAMC,aAAa,GAACA,CAAA,KAAI;IACtBzB,iBAAiB,CAACyB,aAAa,EAAE;IACjCR,aAAa,CAAC,iBAAiB,CAAC;EAClC,CAAC;EACD,MAAMS,KAAK,GAACA,CAAA,KAAI;IACdd,eAAe,EAAE;IACjBZ,iBAAiB,CAACyB,aAAa,EAAE;IACjCR,aAAa,CAAC,iBAAiB,CAAC;IAChCE,cAAc,CAAC,gBAAgB,CAAC;EAClC,CAAC;EACD,MAAM;IAAEQ,UAAU;IAAEf,eAAe;IAAEgB;EAAiC,CAAC,GACrE3B,oBAAoB,CAAC;IAAEO;EAAS,CAAC,CAAC;EAEpC,IAAI,CAACoB,gCAAgC,EAAE;IACrC,OAAO,IAAI;EACb;EAEA,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA;MACE2B,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE;MAClB,CAAE;MAAAL,QAAA,eAEF1B,OAAA;QAAKgC,SAAS,EAAC,SAAS;QAAAN,QAAA,gBACtB1B,OAAA;UAAA0B,QAAA,EAAI;QAAwB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjCpC,OAAA;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAENpC,OAAA;UAAKgC,SAAS,EAAC,cAAc;UAAAN,QAAA,EAAEF;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAEhDpC,OAAA;UAAKgC,SAAS,EAAC,WAAW;UAAAN,QAAA,gBACxB1B,OAAA;YAAQqC,OAAO,EAAEpB,cAAe;YAAAS,QAAA,EAC7Bb;UAAU;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ,eACTpC,OAAA;YACEgC,SAAS,EAAC,MAAM;YAChBK,OAAO,EAAEf,aAAc;YAAAI,QAAA,EAEtBX;UAAW;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACL,eACTpC,OAAA;YAAQgC,SAAS,EAAC,MAAM;YAAEK,OAAO,EAAEd,KAAM;YAAAG,QAAA,EAAC;UAE1C;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP;AAAChC,EAAA,CArFuBD,SAAS;EAAA,QA6C7BL,oBAAoB;AAAA;AAAAwC,EAAA,GA7CAnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
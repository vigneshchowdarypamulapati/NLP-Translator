{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VIGGU\\\\codes\\\\REACT JS\\\\NLPTranslator\\\\src\\\\components\\\\Firstpage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Firstpage() {\n  _s();\n  useEffect(() => {\n    getEngine();\n  }, []);\n  const [input, setInput] = useState(\"\");\n  const [model, setModel] = useState([]);\n  const [currentModel, setCurrentModel] = useState(\"ada\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"How can I help you today?\"\n  }, {\n    user: \"me\",\n    message: \"I want to use chatgpt today\"\n  }]);\n  function clearChat() {\n    setChatlog([]);\n  }\n  function getEngine() {\n    fetch(\"http://localhost:4000/models\").then(res => res.json()).then(data => {\n      // console.log(data.models.data);\n      setModel(data.models.data);\n    });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let Chatlognew = [...chatlog, {\n      user: \"me\",\n      message: `${input}`\n    }];\n    setInput(\"\");\n    setChatlog(Chatlognew);\n    const messages = Chatlognew.map(message => message.message).join(\"\\n\");\n    const response = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages,\n        currentModel\n      })\n    });\n    const data = await response.json();\n    // console.log(data.message);\n    setChatlog([...Chatlognew, {\n      user: \"gpt\",\n      message: `${data.message}`\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \"New Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"models\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setCurrentModel(e.target.value);\n          },\n          children: model.map((model, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.id,\n            children: model.id\n          }, model.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-log\",\n          children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"chat-input-textarea\",\n              rows: \"1\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Enter your Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speech-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Start Listening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Stop Listening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Firstpage, \"ENt9mE1aaH9zc9DupKBBeSizFw0=\");\n_c = Firstpage;\nvar _c;\n$RefreshReg$(_c, \"Firstpage\");","map":{"version":3,"names":["React","useNavigate","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Firstpage","_s","getEngine","input","setInput","model","setModel","currentModel","setCurrentModel","chatlog","setChatlog","user","message","clearChat","fetch","then","res","json","data","models","handleSubmit","e","preventDefault","Chatlognew","messages","map","join","response","method","headers","body","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","index","id","ChatMessage","onSubmit","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/VIGGU/codes/REACT JS/NLPTranslator/src/components/Firstpage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Navbar from \"./Navbar\";\r\n\r\nexport default function Firstpage() {\r\n  useEffect(()=>{\r\n    getEngine();\r\n  },[]);\r\n\r\n  const [input,setInput]=useState(\"\");\r\n  const [model,setModel]=useState([]);\r\n  const [currentModel,setCurrentModel]=useState(\"ada\");\r\n  const [chatlog,setChatlog]=useState([{\r\n    user:\"gpt\",\r\n    message:\"How can I help you today?\"\r\n  },{\r\n    user:\"me\",\r\n    message:\"I want to use chatgpt today\"\r\n  }]);\r\n\r\n  function clearChat(){\r\n    setChatlog([]);\r\n  }\r\n\r\n  function getEngine(){\r\n    fetch(\"http://localhost:4000/models\")\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      // console.log(data.models.data);\r\n      setModel(data.models.data);\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault();\r\n    let Chatlognew=[...chatlog,{user:\"me\",message:`${input}`}]\r\n    setInput(\"\");\r\n    setChatlog(Chatlognew);\r\n\r\n    const messages=Chatlognew.map((message)=>message.message).join(\"\\n\")\r\n    const response=await fetch(\"http://localhost:4000/\",{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        message:messages,\r\n        currentModel\r\n      })\r\n    });\r\n    const data =await response.json();\r\n    // console.log(data.message);\r\n    setChatlog([...Chatlognew,{user:\"gpt\",message:`${data.message}`}]);\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <aside className=\"sidemenu\">\r\n        <div className=\"side-menu-button\" onClick={clearChat}>\r\n          <span>+</span>\r\n          New Chat\r\n        </div>\r\n        <div className=\"models\">\r\n          <select onChange={(e)=>{\r\n            setCurrentModel(e.target.value);\r\n          }}>\r\n            {model.map((model,index)=>(\r\n              <option key={model.id} value={model.id}>{model.id}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </aside>\r\n      <section className=\"chatbox\">\r\n        <div className='chat'>\r\n          <div className=\"chat-log\">\r\n            {chatlog.map((message,index)=>(\r\n              <ChatMessage key={index} message={message} />\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input-holder\">\r\n            <form onSubmit={handleSubmit}>\r\n              <input \r\n                className=\"chat-input-textarea\"\r\n                rows=\"1\" \r\n                value={input}\r\n                onChange={(e)=>setInput(e.target.value)}\r\n                placeholder=\"Enter your Message\">\r\n              </input>\r\n            </form>\r\n            <div className=\"speech-buttons\">\r\n              <button>Start Listening</button>\r\n              <button>Stop Listening</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*!\n * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n(function (name, definition) {\n  if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define === 'function' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    this[name] = definition();\n  }\n})('validator', function (validator) {\n  'use strict';\n\n  validator = {\n    version: '3.43.0'\n  };\n  var emailUser = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e])|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f])))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n  var emailUserUtf8 = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n  var displayName = /^(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\s)*<(.+)>$/i;\n  var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/;\n  var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n  var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/,\n    isbn13Maybe = /^(?:[0-9]{13})$/;\n  var ipv4Maybe = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/,\n    ipv6Block = /^[0-9A-F]{1,4}$/i;\n  var uuid = {\n    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n  };\n  var alpha = /^[A-Z]+$/i,\n    alphanumeric = /^[0-9A-Z]+$/i,\n    numeric = /^[-+]?[0-9]+$/,\n    int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/,\n    float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/,\n    hexadecimal = /^[0-9A-F]+$/i,\n    decimal = /^[-+]?[0-9]*(\\.[0-9]+)?$/,\n    hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\n  var ascii = /^[\\x00-\\x7F]+$/,\n    multibyte = /[^\\x00-\\x7F]/,\n    fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/,\n    halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n  var surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n  var base64 = /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i;\n  var phones = {\n    'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\n    'en-ZA': /^(\\+?27|0)\\d{9}$/,\n    'en-AU': /^(\\+?61|0)4\\d{8}$/,\n    'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n    'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n    'pt-PT': /^(\\+351)?9[1236]\\d{7}$/,\n    'el-GR': /^(\\+30)?((2\\d{9})|(69\\d{8}))$/,\n    'en-GB': /^(\\+?44|0)7\\d{9}$/,\n    'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n    'en-ZM': /^(\\+26)?09[567]\\d{7}$/,\n    'ru-RU': /^(\\+?7|8)?9\\d{9}$/\n  };\n  validator.extend = function (name, fn) {\n    validator[name] = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args[0] = validator.toString(args[0]);\n      return fn.apply(validator, args);\n    };\n  };\n\n  //Right before exporting the validator object, pass each of the builtins\n  //through extend() so that their first argument is coerced to a string\n  validator.init = function () {\n    for (var name in validator) {\n      if (typeof validator[name] !== 'function' || name === 'toString' || name === 'toDate' || name === 'extend' || name === 'init') {\n        continue;\n      }\n      validator.extend(name, validator[name]);\n    }\n  };\n  validator.toString = function (input) {\n    if (typeof input === 'object' && input !== null && input.toString) {\n      input = input.toString();\n    } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n      input = '';\n    } else if (typeof input !== 'string') {\n      input += '';\n    }\n    return input;\n  };\n  validator.toDate = function (date) {\n    if (Object.prototype.toString.call(date) === '[object Date]') {\n      return date;\n    }\n    date = Date.parse(date);\n    return !isNaN(date) ? new Date(date) : null;\n  };\n  validator.toFloat = function (str) {\n    return parseFloat(str);\n  };\n  validator.toInt = function (str, radix) {\n    return parseInt(str, radix || 10);\n  };\n  validator.toBoolean = function (str, strict) {\n    if (strict) {\n      return str === '1' || str === 'true';\n    }\n    return str !== '0' && str !== 'false' && str !== '';\n  };\n  validator.equals = function (str, comparison) {\n    return str === validator.toString(comparison);\n  };\n  validator.contains = function (str, elem) {\n    return str.indexOf(validator.toString(elem)) >= 0;\n  };\n  validator.matches = function (str, pattern, modifiers) {\n    if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return pattern.test(str);\n  };\n  var default_email_options = {\n    allow_display_name: false,\n    allow_utf8_local_part: true,\n    require_tld: true\n  };\n  validator.isEmail = function (str, options) {\n    options = merge(options, default_email_options);\n    if (options.allow_display_name) {\n      var display_email = str.match(displayName);\n      if (display_email) {\n        str = display_email[1];\n      }\n    } else if (/\\s/.test(str)) {\n      return false;\n    }\n    var parts = str.split('@'),\n      domain = parts.pop(),\n      user = parts.join('@');\n    var lower_domain = domain.toLowerCase();\n    if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n      user = user.replace(/\\./g, '').toLowerCase();\n    }\n    if (!validator.isFQDN(domain, {\n      require_tld: options.require_tld\n    })) {\n      return false;\n    }\n    return options.allow_utf8_local_part ? emailUserUtf8.test(user) : emailUser.test(user);\n  };\n  var default_url_options = {\n    protocols: ['http', 'https', 'ftp'],\n    require_tld: true,\n    require_protocol: false,\n    require_valid_protocol: true,\n    allow_underscores: false,\n    allow_trailing_dot: false,\n    allow_protocol_relative_urls: false\n  };\n  validator.isURL = function (url, options) {\n    if (!url || url.length >= 2083 || /\\s/.test(url)) {\n      return false;\n    }\n    if (url.indexOf('mailto:') === 0) {\n      return false;\n    }\n    options = merge(options, default_url_options);\n    var protocol, auth, host, hostname, port, port_str, split;\n    split = url.split('://');\n    if (split.length > 1) {\n      protocol = split.shift();\n      if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n        return false;\n      }\n    } else if (options.require_protocol) {\n      return false;\n    } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n      split[0] = url.substr(2);\n    }\n    url = split.join('://');\n    split = url.split('#');\n    url = split.shift();\n    split = url.split('?');\n    url = split.shift();\n    split = url.split('/');\n    url = split.shift();\n    split = url.split('@');\n    if (split.length > 1) {\n      auth = split.shift();\n      if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n        return false;\n      }\n    }\n    hostname = split.join('@');\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n      port = parseInt(port_str, 10);\n      if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n        return false;\n      }\n    }\n    if (!validator.isIP(host) && !validator.isFQDN(host, options) && host !== 'localhost') {\n      return false;\n    }\n    if (options.host_whitelist && options.host_whitelist.indexOf(host) === -1) {\n      return false;\n    }\n    if (options.host_blacklist && options.host_blacklist.indexOf(host) !== -1) {\n      return false;\n    }\n    return true;\n  };\n  validator.isIP = function (str, version) {\n    version = validator.toString(version);\n    if (!version) {\n      return validator.isIP(str, 4) || validator.isIP(str, 6);\n    } else if (version === '4') {\n      if (!ipv4Maybe.test(str)) {\n        return false;\n      }\n      var parts = str.split('.').sort(function (a, b) {\n        return a - b;\n      });\n      return parts[3] <= 255;\n    } else if (version === '6') {\n      var blocks = str.split(':');\n      var foundOmissionBlock = false; // marker to indicate ::\n\n      // At least some OS accept the last 32 bits of an IPv6 address\n      // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n      // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n      // and '::a.b.c.d' is deprecated, but also valid.\n      var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);\n      var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n      if (blocks.length > expectedNumberOfBlocks) return false;\n\n      // initial or final ::\n      if (str === '::') {\n        return true;\n      } else if (str.substr(0, 2) === '::') {\n        blocks.shift();\n        blocks.shift();\n        foundOmissionBlock = true;\n      } else if (str.substr(str.length - 2) === '::') {\n        blocks.pop();\n        blocks.pop();\n        foundOmissionBlock = true;\n      }\n      for (var i = 0; i < blocks.length; ++i) {\n        // test for a :: which can not be at the string start/end\n        // since those cases have been handled above\n        if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\n          if (foundOmissionBlock) return false; // multiple :: in address\n          foundOmissionBlock = true;\n        } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {\n          // it has been checked before that the last\n          // block is a valid IPv4 address\n        } else if (!ipv6Block.test(blocks[i])) {\n          return false;\n        }\n      }\n      if (foundOmissionBlock) {\n        return blocks.length >= 1;\n      } else {\n        return blocks.length === expectedNumberOfBlocks;\n      }\n    }\n    return false;\n  };\n  var default_fqdn_options = {\n    require_tld: true,\n    allow_underscores: false,\n    allow_trailing_dot: false\n  };\n  validator.isFQDN = function (str, options) {\n    options = merge(options, default_fqdn_options);\n\n    /* Remove the optional trailing dot before checking validity */\n    if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n      str = str.substring(0, str.length - 1);\n    }\n    var parts = str.split('.');\n    if (options.require_tld) {\n      var tld = parts.pop();\n      if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n        return false;\n      }\n    }\n    for (var part, i = 0; i < parts.length; i++) {\n      part = parts[i];\n      if (options.allow_underscores) {\n        if (part.indexOf('__') >= 0) {\n          return false;\n        }\n        part = part.replace(/_/g, '');\n      }\n      if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n        return false;\n      }\n      if (part[0] === '-' || part[part.length - 1] === '-' || part.indexOf('---') >= 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n  validator.isBoolean = function (str) {\n    return ['true', 'false', '1', '0'].indexOf(str) >= 0;\n  };\n  validator.isAlpha = function (str) {\n    return alpha.test(str);\n  };\n  validator.isAlphanumeric = function (str) {\n    return alphanumeric.test(str);\n  };\n  validator.isNumeric = function (str) {\n    return numeric.test(str);\n  };\n  validator.isDecimal = function (str) {\n    return decimal.test(str);\n  };\n  validator.isHexadecimal = function (str) {\n    return hexadecimal.test(str);\n  };\n  validator.isHexColor = function (str) {\n    return hexcolor.test(str);\n  };\n  validator.isLowercase = function (str) {\n    return str === str.toLowerCase();\n  };\n  validator.isUppercase = function (str) {\n    return str === str.toUpperCase();\n  };\n  validator.isInt = function (str, options) {\n    options = options || {};\n    return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n  };\n  validator.isFloat = function (str, options) {\n    options = options || {};\n    return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n  };\n  validator.isDivisibleBy = function (str, num) {\n    return validator.toFloat(str) % validator.toInt(num) === 0;\n  };\n  validator.isNull = function (str) {\n    return str.length === 0;\n  };\n  validator.isLength = function (str, min, max) {\n    var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n    var len = str.length - surrogatePairs.length;\n    return len >= min && (typeof max === 'undefined' || len <= max);\n  };\n  validator.isByteLength = function (str, min, max) {\n    return str.length >= min && (typeof max === 'undefined' || str.length <= max);\n  };\n  validator.isUUID = function (str, version) {\n    var pattern = uuid[version ? version : 'all'];\n    return pattern && pattern.test(str);\n  };\n  validator.isDate = function (str) {\n    return !isNaN(Date.parse(str));\n  };\n  validator.isAfter = function (str, date) {\n    var comparison = validator.toDate(date || new Date()),\n      original = validator.toDate(str);\n    return !!(original && comparison && original > comparison);\n  };\n  validator.isBefore = function (str, date) {\n    var comparison = validator.toDate(date || new Date()),\n      original = validator.toDate(str);\n    return original && comparison && original < comparison;\n  };\n  validator.isIn = function (str, options) {\n    var i;\n    if (Object.prototype.toString.call(options) === '[object Array]') {\n      var array = [];\n      for (i in options) {\n        array[i] = validator.toString(options[i]);\n      }\n      return array.indexOf(str) >= 0;\n    } else if (typeof options === 'object') {\n      return options.hasOwnProperty(str);\n    } else if (options && typeof options.indexOf === 'function') {\n      return options.indexOf(str) >= 0;\n    }\n    return false;\n  };\n  validator.isCreditCard = function (str) {\n    var sanitized = str.replace(/[^0-9]+/g, '');\n    if (!creditCard.test(sanitized)) {\n      return false;\n    }\n    var sum = 0,\n      digit,\n      tmpNum,\n      shouldDouble;\n    for (var i = sanitized.length - 1; i >= 0; i--) {\n      digit = sanitized.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n      if (shouldDouble) {\n        tmpNum *= 2;\n        if (tmpNum >= 10) {\n          sum += tmpNum % 10 + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n      shouldDouble = !shouldDouble;\n    }\n    return !!(sum % 10 === 0 ? sanitized : false);\n  };\n  validator.isISIN = function (str) {\n    if (!isin.test(str)) {\n      return false;\n    }\n    var checksumStr = str.replace(/[A-Z]/g, function (character) {\n      return parseInt(character, 36);\n    });\n    var sum = 0,\n      digit,\n      tmpNum,\n      shouldDouble = true;\n    for (var i = checksumStr.length - 2; i >= 0; i--) {\n      digit = checksumStr.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n      if (shouldDouble) {\n        tmpNum *= 2;\n        if (tmpNum >= 10) {\n          sum += tmpNum + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n      shouldDouble = !shouldDouble;\n    }\n    return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n  };\n  validator.isISBN = function (str, version) {\n    version = validator.toString(version);\n    if (!version) {\n      return validator.isISBN(str, 10) || validator.isISBN(str, 13);\n    }\n    var sanitized = str.replace(/[\\s-]+/g, ''),\n      checksum = 0,\n      i;\n    if (version === '10') {\n      if (!isbn10Maybe.test(sanitized)) {\n        return false;\n      }\n      for (i = 0; i < 9; i++) {\n        checksum += (i + 1) * sanitized.charAt(i);\n      }\n      if (sanitized.charAt(9) === 'X') {\n        checksum += 10 * 10;\n      } else {\n        checksum += 10 * sanitized.charAt(9);\n      }\n      if (checksum % 11 === 0) {\n        return !!sanitized;\n      }\n    } else if (version === '13') {\n      if (!isbn13Maybe.test(sanitized)) {\n        return false;\n      }\n      var factor = [1, 3];\n      for (i = 0; i < 12; i++) {\n        checksum += factor[i % 2] * sanitized.charAt(i);\n      }\n      if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n        return !!sanitized;\n      }\n    }\n    return false;\n  };\n  validator.isMobilePhone = function (str, locale) {\n    if (locale in phones) {\n      return phones[locale].test(str);\n    }\n    return false;\n  };\n  var default_currency_options = {\n    symbol: '$',\n    require_symbol: false,\n    allow_space_after_symbol: false,\n    symbol_after_digits: false,\n    allow_negatives: true,\n    parens_for_negatives: false,\n    negative_sign_before_digits: false,\n    negative_sign_after_digits: false,\n    allow_negative_sign_placeholder: false,\n    thousands_separator: ',',\n    decimal_separator: '.',\n    allow_space_after_digits: false\n  };\n  validator.isCurrency = function (str, options) {\n    options = merge(options, default_currency_options);\n    return currencyRegex(options).test(str);\n  };\n  validator.isJSON = function (str) {\n    try {\n      var obj = JSON.parse(str);\n      return !!obj && typeof obj === 'object';\n    } catch (e) {}\n    return false;\n  };\n  validator.isMultibyte = function (str) {\n    return multibyte.test(str);\n  };\n  validator.isAscii = function (str) {\n    return ascii.test(str);\n  };\n  validator.isFullWidth = function (str) {\n    return fullWidth.test(str);\n  };\n  validator.isHalfWidth = function (str) {\n    return halfWidth.test(str);\n  };\n  validator.isVariableWidth = function (str) {\n    return fullWidth.test(str) && halfWidth.test(str);\n  };\n  validator.isSurrogatePair = function (str) {\n    return surrogatePair.test(str);\n  };\n  validator.isBase64 = function (str) {\n    return base64.test(str);\n  };\n  validator.isMongoId = function (str) {\n    return validator.isHexadecimal(str) && str.length === 24;\n  };\n  validator.ltrim = function (str, chars) {\n    var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\n    return str.replace(pattern, '');\n  };\n  validator.rtrim = function (str, chars) {\n    var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\\s+$/g;\n    return str.replace(pattern, '');\n  };\n  validator.trim = function (str, chars) {\n    var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\\s+|\\s+$/g;\n    return str.replace(pattern, '');\n  };\n  validator.escape = function (str) {\n    return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\`/g, '&#96;');\n  };\n  validator.stripLow = function (str, keep_new_lines) {\n    var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n    return validator.blacklist(str, chars);\n  };\n  validator.whitelist = function (str, chars) {\n    return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n  };\n  validator.blacklist = function (str, chars) {\n    return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\n  };\n  var default_normalize_email_options = {\n    lowercase: true\n  };\n  validator.normalizeEmail = function (email, options) {\n    options = merge(options, default_normalize_email_options);\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n    var parts = email.split('@', 2);\n    parts[1] = parts[1].toLowerCase();\n    if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n      parts[0] = parts[0].toLowerCase().replace(/\\./g, '');\n      if (parts[0][0] === '+') {\n        return false;\n      }\n      parts[0] = parts[0].split('+')[0];\n      parts[1] = 'gmail.com';\n    } else if (options.lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    return parts.join('@');\n  };\n  function merge(obj, defaults) {\n    obj = obj || {};\n    for (var key in defaults) {\n      if (typeof obj[key] === 'undefined') {\n        obj[key] = defaults[key];\n      }\n    }\n    return obj;\n  }\n  function currencyRegex(options) {\n    var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\n      decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\n    var pattern = whole_dollar_amount + decimal_amount;\n    // default is negative sign before symbol, but there are two other options (besides parens)\n    if (options.allow_negatives && !options.parens_for_negatives) {\n      if (options.negative_sign_after_digits) {\n        pattern += negative;\n      } else if (options.negative_sign_before_digits) {\n        pattern = negative + pattern;\n      }\n    }\n    // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n    if (options.allow_negative_sign_placeholder) {\n      pattern = '( (?!\\\\-))?' + pattern;\n    } else if (options.allow_space_after_symbol) {\n      pattern = ' ?' + pattern;\n    } else if (options.allow_space_after_digits) {\n      pattern += '( (?!$))?';\n    }\n    if (options.symbol_after_digits) {\n      pattern += symbol;\n    } else {\n      pattern = symbol + pattern;\n    }\n    if (options.allow_negatives) {\n      if (options.parens_for_negatives) {\n        pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n      } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n        pattern = negative + pattern;\n      }\n    }\n    return new RegExp('^' +\n    // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space\n    '(?!-? )(?=.*\\\\d)' + pattern + '$');\n  }\n  validator.init();\n  return validator;\n});","map":{"version":3,"names":["name","definition","exports","module","define","amd","validator","version","emailUser","emailUserUtf8","displayName","creditCard","isin","isbn10Maybe","isbn13Maybe","ipv4Maybe","ipv6Block","uuid","all","alpha","alphanumeric","numeric","int","float","hexadecimal","decimal","hexcolor","ascii","multibyte","fullWidth","halfWidth","surrogatePair","base64","phones","extend","fn","args","Array","prototype","slice","call","arguments","toString","apply","init","input","isNaN","length","toDate","date","Object","Date","parse","toFloat","str","parseFloat","toInt","radix","parseInt","toBoolean","strict","equals","comparison","contains","elem","indexOf","matches","pattern","modifiers","RegExp","test","default_email_options","allow_display_name","allow_utf8_local_part","require_tld","isEmail","options","merge","display_email","match","parts","split","domain","pop","user","join","lower_domain","toLowerCase","replace","isFQDN","default_url_options","protocols","require_protocol","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","isURL","url","protocol","auth","host","hostname","port","port_str","shift","substr","isIP","host_whitelist","host_blacklist","sort","a","b","blocks","foundOmissionBlock","foundIPv4TransitionBlock","expectedNumberOfBlocks","i","default_fqdn_options","substring","tld","part","isBoolean","isAlpha","isAlphanumeric","isNumeric","isDecimal","isHexadecimal","isHexColor","isLowercase","isUppercase","toUpperCase","isInt","hasOwnProperty","min","max","isFloat","isDivisibleBy","num","isNull","isLength","surrogatePairs","len","isByteLength","isUUID","isDate","isAfter","original","isBefore","isIn","array","isCreditCard","sanitized","sum","digit","tmpNum","shouldDouble","isISIN","checksumStr","character","isISBN","checksum","charAt","factor","isMobilePhone","locale","default_currency_options","symbol","require_symbol","allow_space_after_symbol","symbol_after_digits","allow_negatives","parens_for_negatives","negative_sign_before_digits","negative_sign_after_digits","allow_negative_sign_placeholder","thousands_separator","decimal_separator","allow_space_after_digits","isCurrency","currencyRegex","isJSON","obj","JSON","e","isMultibyte","isAscii","isFullWidth","isHalfWidth","isVariableWidth","isSurrogatePair","isBase64","isMongoId","ltrim","chars","rtrim","trim","escape","stripLow","keep_new_lines","blacklist","whitelist","default_normalize_email_options","lowercase","normalizeEmail","email","defaults","key","negative","whole_dollar_amount_without_sep","whole_dollar_amount_with_sep","valid_whole_dollar_amounts","whole_dollar_amount","decimal_amount"],"sources":["C:/Users/VIGGU/codes/REACT JS/textutils/node_modules/validator/validator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n(function (name, definition) {\n    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n        module.exports = definition();\n    } else if (typeof define === 'function' && typeof define.amd === 'object') {\n        define(definition);\n    } else {\n        this[name] = definition();\n    }\n})('validator', function (validator) {\n\n    'use strict';\n\n    validator = { version: '3.43.0' };\n\n    var emailUser = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e])|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f])))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n\n    var emailUserUtf8 = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n\n    var displayName = /^(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\s)*<(.+)>$/i;\n\n    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/;\n\n    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\n    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/\n      , isbn13Maybe = /^(?:[0-9]{13})$/;\n\n    var ipv4Maybe = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/\n      , ipv6Block = /^[0-9A-F]{1,4}$/i;\n\n    var uuid = {\n        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n    };\n\n    var alpha = /^[A-Z]+$/i\n      , alphanumeric = /^[0-9A-Z]+$/i\n      , numeric = /^[-+]?[0-9]+$/\n      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/\n      , float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/\n      , hexadecimal = /^[0-9A-F]+$/i\n      , decimal = /^[-+]?[0-9]*(\\.[0-9]+)?$/\n      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\n\n    var ascii = /^[\\x00-\\x7F]+$/\n      , multibyte = /[^\\x00-\\x7F]/\n      , fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/\n      , halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\n    var surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\n    var base64 = /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i;\n\n    var phones = {\n      'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\n      'en-ZA': /^(\\+?27|0)\\d{9}$/,\n      'en-AU': /^(\\+?61|0)4\\d{8}$/,\n      'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n      'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n      'pt-PT': /^(\\+351)?9[1236]\\d{7}$/,\n      'el-GR': /^(\\+30)?((2\\d{9})|(69\\d{8}))$/,\n      'en-GB': /^(\\+?44|0)7\\d{9}$/,\n      'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n      'en-ZM': /^(\\+26)?09[567]\\d{7}$/,\n      'ru-RU': /^(\\+?7|8)?9\\d{9}$/\n    };\n\n    validator.extend = function (name, fn) {\n        validator[name] = function () {\n            var args = Array.prototype.slice.call(arguments);\n            args[0] = validator.toString(args[0]);\n            return fn.apply(validator, args);\n        };\n    };\n\n    //Right before exporting the validator object, pass each of the builtins\n    //through extend() so that their first argument is coerced to a string\n    validator.init = function () {\n        for (var name in validator) {\n            if (typeof validator[name] !== 'function' || name === 'toString' ||\n                    name === 'toDate' || name === 'extend' || name === 'init') {\n                continue;\n            }\n            validator.extend(name, validator[name]);\n        }\n    };\n\n    validator.toString = function (input) {\n        if (typeof input === 'object' && input !== null && input.toString) {\n            input = input.toString();\n        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {\n            input = '';\n        } else if (typeof input !== 'string') {\n            input += '';\n        }\n        return input;\n    };\n\n    validator.toDate = function (date) {\n        if (Object.prototype.toString.call(date) === '[object Date]') {\n            return date;\n        }\n        date = Date.parse(date);\n        return !isNaN(date) ? new Date(date) : null;\n    };\n\n    validator.toFloat = function (str) {\n        return parseFloat(str);\n    };\n\n    validator.toInt = function (str, radix) {\n        return parseInt(str, radix || 10);\n    };\n\n    validator.toBoolean = function (str, strict) {\n        if (strict) {\n            return str === '1' || str === 'true';\n        }\n        return str !== '0' && str !== 'false' && str !== '';\n    };\n\n    validator.equals = function (str, comparison) {\n        return str === validator.toString(comparison);\n    };\n\n    validator.contains = function (str, elem) {\n        return str.indexOf(validator.toString(elem)) >= 0;\n    };\n\n    validator.matches = function (str, pattern, modifiers) {\n        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n            pattern = new RegExp(pattern, modifiers);\n        }\n        return pattern.test(str);\n    };\n\n    var default_email_options = {\n        allow_display_name: false,\n        allow_utf8_local_part: true,\n        require_tld: true\n    };\n\n    validator.isEmail = function (str, options) {\n        options = merge(options, default_email_options);\n\n        if (options.allow_display_name) {\n            var display_email = str.match(displayName);\n            if (display_email) {\n                str = display_email[1];\n            }\n        } else if (/\\s/.test(str)) {\n            return false;\n        }\n\n        var parts = str.split('@')\n          , domain = parts.pop()\n          , user = parts.join('@');\n\n        var lower_domain = domain.toLowerCase();\n        if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n            user = user.replace(/\\./g, '').toLowerCase();\n        }\n\n        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {\n            return false;\n        }\n\n        return options.allow_utf8_local_part ?\n            emailUserUtf8.test(user) :\n            emailUser.test(user);\n    };\n\n    var default_url_options = {\n        protocols: [ 'http', 'https', 'ftp' ]\n      , require_tld: true\n      , require_protocol: false\n      , require_valid_protocol: true\n      , allow_underscores: false\n      , allow_trailing_dot: false\n      , allow_protocol_relative_urls: false\n    };\n\n    validator.isURL = function (url, options) {\n        if (!url || url.length >= 2083 || /\\s/.test(url)) {\n            return false;\n        }\n        if (url.indexOf('mailto:') === 0) {\n            return false;\n        }\n        options = merge(options, default_url_options);\n        var protocol, auth, host, hostname, port,\n            port_str, split;\n        split = url.split('://');\n        if (split.length > 1) {\n            protocol = split.shift();\n            if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n                return false;\n            }\n        } else if (options.require_protocol) {\n            return false;\n        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n            split[0] = url.substr(2);\n        }\n        url = split.join('://');\n        split = url.split('#');\n        url = split.shift();\n\n        split = url.split('?');\n        url = split.shift();\n\n        split = url.split('/');\n        url = split.shift();\n        split = url.split('@');\n        if (split.length > 1) {\n            auth = split.shift();\n            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n                return false;\n            }\n        }\n        hostname = split.join('@');\n        split = hostname.split(':');\n        host = split.shift();\n        if (split.length) {\n            port_str = split.join(':');\n            port = parseInt(port_str, 10);\n            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n                return false;\n            }\n        }\n        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&\n                host !== 'localhost') {\n            return false;\n        }\n        if (options.host_whitelist &&\n                options.host_whitelist.indexOf(host) === -1) {\n            return false;\n        }\n        if (options.host_blacklist &&\n                options.host_blacklist.indexOf(host) !== -1) {\n            return false;\n        }\n        return true;\n    };\n\n    validator.isIP = function (str, version) {\n        version = validator.toString(version);\n        if (!version) {\n            return validator.isIP(str, 4) || validator.isIP(str, 6);\n        } else if (version === '4') {\n            if (!ipv4Maybe.test(str)) {\n                return false;\n            }\n            var parts = str.split('.').sort(function (a, b) {\n                return a - b;\n            });\n            return parts[3] <= 255;\n        } else if (version === '6') {\n            var blocks = str.split(':');\n            var foundOmissionBlock = false; // marker to indicate ::\n\n            // At least some OS accept the last 32 bits of an IPv6 address\n            // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n            // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n            // and '::a.b.c.d' is deprecated, but also valid.\n            var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);\n            var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n\n            if (blocks.length > expectedNumberOfBlocks)\n                return false;\n\n            // initial or final ::\n            if (str === '::') {\n                return true;\n            } else if (str.substr(0, 2) === '::') {\n                blocks.shift();\n                blocks.shift();\n                foundOmissionBlock = true;\n            } else if (str.substr(str.length - 2) === '::') {\n                blocks.pop();\n                blocks.pop();\n                foundOmissionBlock = true;\n            }\n\n            for (var i = 0; i < blocks.length; ++i) {\n                // test for a :: which can not be at the string start/end\n                // since those cases have been handled above\n                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {\n                    if (foundOmissionBlock)\n                        return false; // multiple :: in address\n                    foundOmissionBlock = true;\n                } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {\n                    // it has been checked before that the last\n                    // block is a valid IPv4 address\n                } else if (!ipv6Block.test(blocks[i])) {\n                    return false;\n                }\n            }\n\n            if (foundOmissionBlock) {\n                return blocks.length >= 1;\n            } else {\n                return blocks.length === expectedNumberOfBlocks;\n            }\n        }\n        return false;\n    };\n\n    var default_fqdn_options = {\n        require_tld: true\n      , allow_underscores: false\n      , allow_trailing_dot: false\n    };\n\n    validator.isFQDN = function (str, options) {\n        options = merge(options, default_fqdn_options);\n\n        /* Remove the optional trailing dot before checking validity */\n        if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n            str = str.substring(0, str.length - 1);\n        }\n        var parts = str.split('.');\n        if (options.require_tld) {\n            var tld = parts.pop();\n            if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n                return false;\n            }\n        }\n        for (var part, i = 0; i < parts.length; i++) {\n            part = parts[i];\n            if (options.allow_underscores) {\n                if (part.indexOf('__') >= 0) {\n                    return false;\n                }\n                part = part.replace(/_/g, '');\n            }\n            if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n                return false;\n            }\n            if (part[0] === '-' || part[part.length - 1] === '-' ||\n                    part.indexOf('---') >= 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    validator.isBoolean = function(str) {\n        return (['true', 'false', '1', '0'].indexOf(str) >= 0);\n    };\n\n    validator.isAlpha = function (str) {\n        return alpha.test(str);\n    };\n\n    validator.isAlphanumeric = function (str) {\n        return alphanumeric.test(str);\n    };\n\n    validator.isNumeric = function (str) {\n        return numeric.test(str);\n    };\n    \n    validator.isDecimal = function (str) {\n        return decimal.test(str);\n    };\n\n    validator.isHexadecimal = function (str) {\n        return hexadecimal.test(str);\n    };\n\n    validator.isHexColor = function (str) {\n        return hexcolor.test(str);\n    };\n\n    validator.isLowercase = function (str) {\n        return str === str.toLowerCase();\n    };\n\n    validator.isUppercase = function (str) {\n        return str === str.toUpperCase();\n    };\n\n    validator.isInt = function (str, options) {\n        options = options || {};\n        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n    };\n\n    validator.isFloat = function (str, options) {\n        options = options || {};\n        return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n    };\n\n    validator.isDivisibleBy = function (str, num) {\n        return validator.toFloat(str) % validator.toInt(num) === 0;\n    };\n\n    validator.isNull = function (str) {\n        return str.length === 0;\n    };\n\n    validator.isLength = function (str, min, max) {\n        var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n        var len = str.length - surrogatePairs.length;\n        return len >= min && (typeof max === 'undefined' || len <= max);\n    };\n\n    validator.isByteLength = function (str, min, max) {\n        return str.length >= min && (typeof max === 'undefined' || str.length <= max);\n    };\n\n    validator.isUUID = function (str, version) {\n        var pattern = uuid[version ? version : 'all'];\n        return pattern && pattern.test(str);\n    };\n\n    validator.isDate = function (str) {\n        return !isNaN(Date.parse(str));\n    };\n\n    validator.isAfter = function (str, date) {\n        var comparison = validator.toDate(date || new Date())\n          , original = validator.toDate(str);\n        return !!(original && comparison && original > comparison);\n    };\n\n    validator.isBefore = function (str, date) {\n        var comparison = validator.toDate(date || new Date())\n          , original = validator.toDate(str);\n        return original && comparison && original < comparison;\n    };\n\n    validator.isIn = function (str, options) {\n        var i;\n        if (Object.prototype.toString.call(options) === '[object Array]') {\n            var array = [];\n            for (i in options) {\n                array[i] = validator.toString(options[i]);\n            }\n            return array.indexOf(str) >= 0;\n        } else if (typeof options === 'object') {\n            return options.hasOwnProperty(str);\n        } else if (options && typeof options.indexOf === 'function') {\n            return options.indexOf(str) >= 0;\n        }\n        return false;\n    };\n\n    validator.isCreditCard = function (str) {\n        var sanitized = str.replace(/[^0-9]+/g, '');\n        if (!creditCard.test(sanitized)) {\n            return false;\n        }\n        var sum = 0, digit, tmpNum, shouldDouble;\n        for (var i = sanitized.length - 1; i >= 0; i--) {\n            digit = sanitized.substring(i, (i + 1));\n            tmpNum = parseInt(digit, 10);\n            if (shouldDouble) {\n                tmpNum *= 2;\n                if (tmpNum >= 10) {\n                    sum += ((tmpNum % 10) + 1);\n                } else {\n                    sum += tmpNum;\n                }\n            } else {\n                sum += tmpNum;\n            }\n            shouldDouble = !shouldDouble;\n        }\n        return !!((sum % 10) === 0 ? sanitized : false);\n    };\n\n    validator.isISIN = function (str) {\n        if (!isin.test(str)) {\n            return false;\n        }\n\n        var checksumStr = str.replace(/[A-Z]/g, function(character) {\n            return parseInt(character, 36);\n        });\n\n        var sum = 0, digit, tmpNum, shouldDouble = true;\n        for (var i = checksumStr.length - 2; i >= 0; i--) {\n            digit = checksumStr.substring(i, (i + 1));\n            tmpNum = parseInt(digit, 10);\n            if (shouldDouble) {\n                tmpNum *= 2;\n                if (tmpNum >= 10) {\n                    sum += tmpNum + 1;\n                } else {\n                    sum += tmpNum;\n                }\n            } else {\n                sum += tmpNum;\n            }\n            shouldDouble = !shouldDouble;\n        }\n\n        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n    };\n\n    validator.isISBN = function (str, version) {\n        version = validator.toString(version);\n        if (!version) {\n            return validator.isISBN(str, 10) || validator.isISBN(str, 13);\n        }\n        var sanitized = str.replace(/[\\s-]+/g, '')\n          , checksum = 0, i;\n        if (version === '10') {\n            if (!isbn10Maybe.test(sanitized)) {\n                return false;\n            }\n            for (i = 0; i < 9; i++) {\n                checksum += (i + 1) * sanitized.charAt(i);\n            }\n            if (sanitized.charAt(9) === 'X') {\n                checksum += 10 * 10;\n            } else {\n                checksum += 10 * sanitized.charAt(9);\n            }\n            if ((checksum % 11) === 0) {\n                return !!sanitized;\n            }\n        } else  if (version === '13') {\n            if (!isbn13Maybe.test(sanitized)) {\n                return false;\n            }\n            var factor = [ 1, 3 ];\n            for (i = 0; i < 12; i++) {\n                checksum += factor[i % 2] * sanitized.charAt(i);\n            }\n            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {\n                return !!sanitized;\n            }\n        }\n        return false;\n    };\n\n    validator.isMobilePhone = function(str, locale) {\n        if (locale in phones) {\n            return phones[locale].test(str);\n        }\n        return false;\n    };\n\n    var default_currency_options = {\n        symbol: '$'\n      , require_symbol: false\n      , allow_space_after_symbol: false\n      , symbol_after_digits: false\n      , allow_negatives: true\n      , parens_for_negatives: false\n      , negative_sign_before_digits: false\n      , negative_sign_after_digits: false\n      , allow_negative_sign_placeholder: false\n      , thousands_separator: ','\n      , decimal_separator: '.'\n      , allow_space_after_digits: false\n    };\n\n    validator.isCurrency = function (str, options) {\n        options = merge(options, default_currency_options);\n\n        return currencyRegex(options).test(str);\n    };\n\n    validator.isJSON = function (str) {\n        try {\n            var obj = JSON.parse(str);\n            return !!obj && typeof obj === 'object';\n        } catch (e) {}\n        return false;\n    };\n\n    validator.isMultibyte = function (str) {\n        return multibyte.test(str);\n    };\n\n    validator.isAscii = function (str) {\n        return ascii.test(str);\n    };\n\n    validator.isFullWidth = function (str) {\n        return fullWidth.test(str);\n    };\n\n    validator.isHalfWidth = function (str) {\n        return halfWidth.test(str);\n    };\n\n    validator.isVariableWidth = function (str) {\n        return fullWidth.test(str) && halfWidth.test(str);\n    };\n\n    validator.isSurrogatePair = function (str) {\n        return surrogatePair.test(str);\n    };\n\n    validator.isBase64 = function (str) {\n        return base64.test(str);\n    };\n\n    validator.isMongoId = function (str) {\n        return validator.isHexadecimal(str) && str.length === 24;\n    };\n\n    validator.ltrim = function (str, chars) {\n        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.rtrim = function (str, chars) {\n        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\\s+$/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.trim = function (str, chars) {\n        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\\s+|\\s+$/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.escape = function (str) {\n        return (str.replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#x27;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2F;')\n            .replace(/\\`/g, '&#96;'));\n    };\n\n    validator.stripLow = function (str, keep_new_lines) {\n        var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n        return validator.blacklist(str, chars);\n    };\n\n    validator.whitelist = function (str, chars) {\n        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n    };\n\n    validator.blacklist = function (str, chars) {\n        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\n    };\n\n    var default_normalize_email_options = {\n        lowercase: true\n    };\n\n    validator.normalizeEmail = function (email, options) {\n        options = merge(options, default_normalize_email_options);\n        if (!validator.isEmail(email)) {\n            return false;\n        }\n        var parts = email.split('@', 2);\n        parts[1] = parts[1].toLowerCase();\n        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n            parts[0] = parts[0].toLowerCase().replace(/\\./g, '');\n            if (parts[0][0] === '+') {\n                return false;\n            }\n            parts[0] = parts[0].split('+')[0];\n            parts[1] = 'gmail.com';\n        } else if (options.lowercase) {\n            parts[0] = parts[0].toLowerCase();\n        }\n        return parts.join('@');\n    };\n\n    function merge(obj, defaults) {\n        obj = obj || {};\n        for (var key in defaults) {\n            if (typeof obj[key] === 'undefined') {\n                obj[key] = defaults[key];\n            }\n        }\n        return obj;\n    }\n\n    function currencyRegex(options) {\n        var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?')\n            , negative = '-?'\n            , whole_dollar_amount_without_sep = '[1-9]\\\\d*'\n            , whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*'\n            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]\n            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'\n            , decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\n        var pattern = whole_dollar_amount + decimal_amount;\n        // default is negative sign before symbol, but there are two other options (besides parens)\n        if (options.allow_negatives && !options.parens_for_negatives) {\n            if (options.negative_sign_after_digits) {\n                pattern += negative;\n            }\n            else if (options.negative_sign_before_digits) {\n                pattern = negative + pattern;\n            }\n        }\n        // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n        if (options.allow_negative_sign_placeholder) {\n            pattern = '( (?!\\\\-))?' + pattern;\n        }\n        else if (options.allow_space_after_symbol) {\n            pattern = ' ?' + pattern;\n        }\n        else if (options.allow_space_after_digits) {\n            pattern += '( (?!$))?';\n        }\n        if (options.symbol_after_digits) {\n            pattern += symbol;\n        } else {\n            pattern = symbol + pattern;\n        }\n        if (options.allow_negatives) {\n            if (options.parens_for_negatives) {\n                pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n            }\n            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n                pattern = negative + pattern;\n            }\n        }\n        return new RegExp(\n            '^' +\n            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space\n            '(?!-? )(?=.*\\\\d)' +\n            pattern +\n            '$'\n        );\n    }\n\n    validator.init();\n\n    return validator;\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}